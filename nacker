#!/usr/bin/env python3
'''
Nacker is a tool to circumvent 802.1x Network Access Control (NAC) on
a wired LAN.

Copyright (C) 2013  Carsten Maartmann-Moe

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.

Created on Aug 29, 2013

@author: Carsten Maartmann-Moe <carsten@carmaa.com> aka ntropy
'''

from datetime import date
import getopt
import os
import sys

VERSION = '0.0.1'
URL = 'http://github.com/carmaa/nacker'


def banner():
    '''
    Print obligatory banner
    '''
    print('Nacker - bypass 802.1x LAN NAC')
    print('v{0} (C) Carsten Maartmann-Moe {1}'.format(VERSION, date.today().strftime("%Y")))
    print('Download: {0} | Twitter: @breaknenter'.format(URL))
    print()


def main(argv):
    encoding = sys.getdefaultencoding()
    
    banner()
    
    # Parse args
    try:
        opts, args = getopt.getopt(argv[1:], 'h', ['help'])
    except getopt.GetoptError as err:
        print(err)
        usage(argv[0])
        sys.exit(2)
    for opt, arg in opts:
        if opt in ('-h', '--help'):
            usage(argv[0])
            sys.exit()
        else:
            assert False, 'Option not handled: ' + opt
    
    # We don't accept any other arguments
    if args:
        term.warn('Arguments {0} ignored'.format(', '.join(args)))
    
    # Main logic goes here
    try:
        print()#TODO
    except Exception as exc:
        print('Um, something went wrong: {0}'.format(exc))
        traceback.print_exc()
    except KeyboardInterrupt:
        print('Aborted')


def usage(execname):
    print(
'''Nacker is a tool to bypass 802.1x Network Access Control (NAC) on a wired LAN.

Usage: ''' + os.path.basename(execname) + ''' [OPTIONS]

Options:
    -h, --help:           Displays this message.''')


if __name__ == '__main__':
    main(sys.argv)
